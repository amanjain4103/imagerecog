{"version":3,"sources":["logo1.png","components/NavigationBar.js","components/Logo.js","components/ImageLinkForm.js","components/Rank.js","components/FaceRecognition.js","components/Signin.js","components/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavigationBar","onRouteChange","isSignedIn","className","onClick","id","Logo","src","Logo1","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","loadUser","FaceRecognition","imageUrl","box","width","height","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","console","log","this","htmlFor","href","React","Component","Register","onNameChange","catch","err","app","Clarifai","App","apiKey","initialState","input","route","joined","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","models","predict","FACE_DETECT_MODEL","count","Object","assign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b2d36084.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.46d29566.png\";","import React from 'react';\r\nimport './NavigationBar.css';\r\n\r\nconst NavigationBar = ({onRouteChange,isSignedIn}) =>{\r\n   \r\n    if(isSignedIn){\r\n        return (\r\n            <div className=\"navbar\">\r\n                <section onClick={() => onRouteChange('signout')} className=\"ml-auto fw7 f3 sign\" id=\"signOut\" >Sign Out</section>\r\n            </div>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"navbar\">\r\n                <section onClick={() => onRouteChange('refister')} className=\"ml-auto fw7 f3 sign\" id=\"Register\" >Register</section>\r\n                <section onClick={() => onRouteChange('signin')} className=\"fw7 f3 sign\" id=\"signIn\" >Sign In</section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigationBar;","import React from 'react';\r\nimport Tilt from 'react-parallax-tilt';\r\nimport Logo1 from '../logo1.png'\r\nimport './Logo.css';\r\n\r\nconst Logo = () =>{\r\n    return (\r\n        <Tilt className=\"w-20 h-10 pa2 ma2\">\r\n            <div id=\"logo\" className=\"h-10  shadow-2\" >\r\n               <img src={Logo1} alt=\"\" />\r\n            </div>\r\n        </Tilt>\r\n    )\r\n}\r\n\r\nexport default Logo ;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange,onButtonSubmit}) => {\r\n    return (\r\n        <div className=\"tc \">\r\n            <input type=\"search\" className=\"f4 pa2 pr4 pl4 ma2 shadow3\" onChange={onInputChange} />\r\n            <button className=\"f4 pa2 pr4 pl4 ma2\" onClick={onButtonSubmit} >Detect </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({ name, entries ,loadUser}) => {\r\n  \r\n    return (\r\n    <div>\r\n      <div className='white f3 tc'>\r\n        {`${name}, your current entry count is...`}\r\n      </div>\r\n      <div className='white f1 tc'>\r\n        {entries}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;\r\n\r\n","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return (\r\n      <div className='center ma'>\r\n        <div className='absolute mt2'>\r\n          <img id='inputimage' alt='' src={imageUrl} width='500px' height='auto'/>\r\n          <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('https://aqueous-woodland-95737.herokuapp.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home');\r\n        }else{\r\n            console.log(\"error signing in \");\r\n        }\r\n      })\r\n  }\r\n\r\n    render(){\r\n        const {onRouteChange} = this.props;\r\n        return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-1 mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure center\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                            onClick={this.onSubmitSignIn} \r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Sign in\" />\r\n                        </div>\r\n                            <div className=\"lh-copy mt3\">\r\n                            <a href=\"#0\" onClick={() => onRouteChange(\"register\")} className=\"f6 link dim black db\">Register Now!!!</a>\r\n                            </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n    \r\n    \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({name: event.target.value})\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('https://aqueous-woodland-95737.herokuapp.com/register', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n      .catch(err=>{console.log(err)})\r\n  }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-1 mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure center\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                <input \r\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"text\" \r\n                                name=\"text\"  \r\n                                id=\"text\"\r\n                                onChange={this.onNameChange} \r\n                                />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input \r\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"email\" \r\n                                name=\"email-address\"  \r\n                                id=\"email-address\" \r\n                                onChange={this.onEmailChange}/>\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">New Password</label>\r\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"password\" \r\n                                name=\"password\"  \r\n                                id=\"password\" \r\n                                onChange={this.onPasswordChange}/>\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                            onClick={this.onSubmitSignIn} \r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Register Me :)\" />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n                </article>\r\n    \r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport './App.css';\nimport 'tachyons';\nimport NavigationBar from './components/NavigationBar';\nimport Logo from './components/Logo';\nimport ImageLinkForm from './components/ImageLinkForm';\nimport Rank from './components/Rank';\nimport FaceRecognition from './components/FaceRecognition.js';\nimport Clarifai  from 'clarifai';\nimport Signin from './components/Signin';\nimport Register from './components/Register';\n\n//verifying Clarifai\n \nconst app = new Clarifai.App({\n apiKey: 'a833a7a308aa49c18a17557f04ebbad3'\n});\n//verification completed\n\nconst initialState = {\n  input:'',\n  imageUrl:\"\",\n  box:{},\n  route:'signin',\n  isSignedIn : false,\n  user:{\n    id:'',\n    name:'',\n    email:'',\n    entries:0,\n    joined:''\n  }\n}\n\n\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state = initialState;\n  }\n\n       \n        \n  loadUser = (data) => {        \n    this.setState({user:{\n      id:data.id,        \n      name:data.name,         \n      email:data.email,        \n      entries:data.entries,        \n      joined:data.joined        \n    }\n    })        \n    console.log(data);        \n        \n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol:   clarifaiFace.left_col * width,\n      topRow:    clarifaiFace.top_row * height,\n      rightCol:  width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n\n  onInputChange = (event) =>{\n    this.setState({input:event.target.value});\n  } \n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => {\n        if (response) {\n          fetch('https://aqueous-woodland-95737.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, {entries: count}))\n            })\n            .catch(console.log)\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\nonRouteChange = (route) =>{\n  if(route === 'signout'){\n    this.setState(initialState);\n  }else if(route === 'home'){\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route:route});\n}\n  \n\n  render() {\n    \n    var { isSignedIn,imageUrl,route,box } = this.state;\n\n    return (\n          <div>\n            <NavigationBar onRouteChange={this.onRouteChange} isSignedIn={isSignedIn}/>\n            {\n              route === \"home\"  ?\n              <div>\n                  <Logo />\n                  <Rank name={this.state.user.name}\n                      entries={this.state.user.entries}\n                      loadUser={this.loadUser}\n                  />\n                  <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n                  <FaceRecognition imageUrl={imageUrl} box ={box} /> \n                </div>\n                :(route === \"signin\") ?\n                  <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> \n                : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n                  \n                \n            }\n            \n            \n          </div>\n    )\n}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}